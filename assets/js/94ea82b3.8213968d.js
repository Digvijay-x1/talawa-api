"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[21953],{45565:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"docs/developer-resources/plugin","title":"Plugin System","description":"Overview","source":"@site/docs/docs/developer-resources/plugin.md","sourceDirName":"docs/developer-resources","slug":"/developer-resources/plugin","permalink":"/docs/developer-resources/plugin","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-api/edit/develop/docs/docs/docs/developer-resources/plugin.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"plugin","title":"Plugin System","slug":"/developer-resources/plugin","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Rate Limiting","permalink":"/docs/developer-resources/rate-limiting"},"next":{"title":"Testing & Validation","permalink":"/docs/developer-resources/testing"}}');var l=i(86070),t=i(55288);const r={id:"plugin",title:"Plugin System",slug:"/developer-resources/plugin",sidebar_position:6},a=void 0,o={},c=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Core Files",id:"core-files",level:2},{value:"1. <code>index.ts</code> - Main Entry Point",id:"1-indexts---main-entry-point",level:3},{value:"2. <code>types.ts</code> - Type Definitions",id:"2-typests---type-definitions",level:3},{value:"1. Plugin Manifest Types (<code>IPluginManifest</code>)",id:"1-plugin-manifest-types-ipluginmanifest",level:4},{value:"2. Extension Types",id:"2-extension-types",level:4},{value:"3. Runtime Types",id:"3-runtime-types",level:4},{value:"4. Context Types",id:"4-context-types",level:4},{value:"3. <code>registry.ts</code> - Plugin Registry &amp; Initialization",id:"3-registryts---plugin-registry--initialization",level:3},{value:"<code>createPluginContext(dependencies)</code>",id:"createplugincontextdependencies",level:4},{value:"<code>initializePluginSystem(context, pluginsDirectory?)</code>",id:"initializepluginsystemcontext-pluginsdirectory",level:4},{value:"<code>getPluginManagerInstance()</code>",id:"getpluginmanagerinstance",level:4},{value:"<code>isPluginSystemInitialized()</code>",id:"ispluginsysteminitialized",level:4},{value:"<code>destroyPluginSystem()</code>",id:"destroypluginsystem",level:4},{value:"<code>getPluginSystemStatus()</code>",id:"getpluginsystemstatus",level:4},{value:"4. <code>utils.ts</code> - Utility Functions",id:"4-utilsts---utility-functions",level:3},{value:"Validation Functions",id:"validation-functions",level:4},{value:"Loading Functions",id:"loading-functions",level:4},{value:"File System Functions",id:"file-system-functions",level:4},{value:"Plugin-Specific Functions",id:"plugin-specific-functions",level:4},{value:"Database Functions",id:"database-functions",level:4},{value:"Helper Functions",id:"helper-functions",level:4},{value:"5. <code>pluginWebhooks.ts</code> - Webhook Handler",id:"5-pluginwebhooksts---webhook-handler",level:3},{value:"Manager Directory",id:"manager-directory",level:2},{value:"1. <code>manager/core.ts</code> - Core Plugin Manager",id:"1-managercorets---core-plugin-manager",level:3},{value:"1. Plugin Discovery &amp; Loading",id:"1-plugin-discovery--loading",level:4},{value:"2. Plugin State Management",id:"2-plugin-state-management",level:4},{value:"3. Extension Registry",id:"3-extension-registry",level:4},{value:"4. Lifecycle Coordination",id:"4-lifecycle-coordination",level:4},{value:"5. Component Coordination",id:"5-component-coordination",level:4},{value:"2. <code>manager/lifecycle.ts</code> - Lifecycle Manager",id:"2-managerlifecyclets---lifecycle-manager",level:3},{value:"1. Plugin Installation",id:"1-plugin-installation",level:4},{value:"2. Plugin Activation",id:"2-plugin-activation",level:4},{value:"3. Plugin Deactivation",id:"3-plugin-deactivation",level:4},{value:"4. Plugin Uninstallation",id:"4-plugin-uninstallation",level:4},{value:"3. <code>manager/extensions.ts</code> - Extension Loader",id:"3-managerextensionsts---extension-loader",level:3},{value:"1. GraphQL Extensions (Builder-First Approach)",id:"1-graphql-extensions-builder-first-approach",level:4},{value:"2. Database Extensions",id:"2-database-extensions",level:4},{value:"3. Hook Extensions",id:"3-hook-extensions",level:4},{value:"4. Webhook Extensions",id:"4-webhook-extensions",level:4},{value:"4. <code>manager/registry.ts</code> - Registry Manager",id:"4-managerregistryts---registry-manager",level:3},{value:"5. <code>manager/index.ts</code> - Manager Exports",id:"5-managerindexts---manager-exports",level:3},{value:"Extension Point System",id:"extension-point-system",level:2},{value:"GraphQL Extensions (Builder-First)",id:"graphql-extensions-builder-first",level:3},{value:"Database Extensions",id:"database-extensions",level:3},{value:"Hook Extensions",id:"hook-extensions",level:3},{value:"Webhook Extensions",id:"webhook-extensions",level:3},{value:"Plugin Development Workflow",id:"plugin-development-workflow",level:2},{value:"1. Plugin Structure",id:"1-plugin-structure",level:3},{value:"2. Manifest Example",id:"2-manifest-example",level:3},{value:"3. Plugin Code Example",id:"3-plugin-code-example",level:3},{value:"4. Installation &amp; Usage",id:"4-installation--usage",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"For Plugin Developers",id:"for-plugin-developers",level:3},{value:"For System Integrators",id:"for-system-integrators",level:3},{value:"For Administrators",id:"for-administrators",level:3},{value:"Event System",id:"event-system",level:2},{value:"Lifecycle Events",id:"lifecycle-events",level:3},{value:"Custom Plugin Events",id:"custom-plugin-events",level:3},{value:"Testing",id:"testing",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Plugin Not Loading",id:"plugin-not-loading",level:3},{value:"GraphQL Extension Not Working",id:"graphql-extension-not-working",level:3},{value:"Database Tables Not Created",id:"database-tables-not-created",level:3},{value:"Webhook Not Responding",id:"webhook-not-responding",level:3},{value:"Docker Container Issues",id:"docker-container-issues",level:3},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2}];function d(n){const e={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(e.p,{children:"The Talawa API Plugin System is a robust, event-driven plugin architecture designed for extending the GraphQL API backend without modifying core code. It provides a complete lifecycle management system for server-side plugins with support for GraphQL extensions, database schema extensions, hooks, webhooks, and Docker container management."}),"\n",(0,l.jsx)(e.h3,{id:"key-features",children:"Key Features"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Builder-First GraphQL Extensions"}),": Pothos GraphQL builder integration for type-safe schema extensions"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Database Extensions"}),": Dynamic table creation and management with Drizzle ORM"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Event Hooks"}),": Pre/post event hooks for plugin lifecycle and business logic"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Webhook Support"}),": RESTful webhook endpoints for external integrations"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Docker Integration"}),": Automatic container lifecycle management for plugins requiring services"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Dependency Management"}),": Automatic npm package installation for plugin dependencies"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Event-Driven Architecture"}),": EventEmitter-based pub/sub system for plugin communication"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Database as Source of Truth"}),": Plugin state persisted in database for reliability"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Type-Safe"}),": Full TypeScript support with comprehensive type definitions"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                  Plugin Manager (Core)                      \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502  Lifecycle   \u2502  \u2502  Extensions  \u2502  \u2502   Registry       \u2502   \u2502\n\u2502  \u2502  Manager     \u2502  \u2502  Loader      \u2502  \u2502   Manager        \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2502\n        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u2502                   \u2502                  \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Extension    \u2502   \u2502  Database   \u2502  \u2502   Event System   \u2502\n\u2502   Registry     \u2502   \u2502  Operations \u2502  \u2502   (EventEmitter) \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u2022 GraphQL      \u2502   \u2502 \u2022 Plugin DB \u2502  \u2502 \u2022 Lifecycle      \u2502\n\u2502   (Pothos)     \u2502   \u2502 \u2022 Tables    \u2502  \u2502   Events         \u2502\n\u2502 \u2022 Database     \u2502   \u2502 \u2022 Enums     \u2502  \u2502 \u2022 Hook Events    \u2502\n\u2502 \u2022 Hooks        \u2502   \u2502 \u2022 Relations \u2502  \u2502 \u2022 Custom Events  \u2502\n\u2502 \u2022 Webhooks     \u2502   \u2502             \u2502  \u2502                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"core-files",children:"Core Files"}),"\n",(0,l.jsxs)(e.h3,{id:"1-indexts---main-entry-point",children:["1. ",(0,l.jsx)(e.code,{children:"index.ts"})," - Main Entry Point"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Central export hub for the entire API plugin system."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Responsibilities"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Exports all public APIs, types, utilities, and managers"}),"\n",(0,l.jsx)(e.li,{children:"Provides clean interface for consuming the plugin system"}),"\n",(0,l.jsx)(e.li,{children:"Single source of truth for what's available to external consumers"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Exports"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"PluginManager"})," - Main orchestrator class"]}),"\n",(0,l.jsxs)(e.li,{children:["Type definitions (",(0,l.jsx)(e.code,{children:"IPluginManifest"}),", ",(0,l.jsx)(e.code,{children:"IExtensionPoints"}),", etc.)"]}),"\n",(0,l.jsxs)(e.li,{children:["Utility functions (",(0,l.jsx)(e.code,{children:"validatePluginManifest"}),", ",(0,l.jsx)(e.code,{children:"loadPluginManifest"}),", etc.)"]}),"\n",(0,l.jsxs)(e.li,{children:["Registry functions (",(0,l.jsx)(e.code,{children:"initializePluginSystem"}),", ",(0,l.jsx)(e.code,{children:"createPluginContext"}),")"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"2-typests---type-definitions",children:["2. ",(0,l.jsx)(e.code,{children:"types.ts"})," - Type Definitions"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Centralized TypeScript type definitions for the entire plugin system."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Type Categories"}),":"]}),"\n",(0,l.jsxs)(e.h4,{id:"1-plugin-manifest-types-ipluginmanifest",children:["1. Plugin Manifest Types (",(0,l.jsx)(e.code,{children:"IPluginManifest"}),")"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"{\n  name: string;\n  pluginId: string;\n  version: string;\n  description: string;\n  author: string;\n  main: string;\n  extensionPoints?: IExtensionPoints;\n  dependencies?: Record<string, string>;\n  docker?: {\n    enabled?: boolean;\n    composeFile?: string;\n    service?: string;\n    // Lifecycle flags\n    buildOnInstall?: boolean;\n    upOnActivate?: boolean;\n    downOnDeactivate?: boolean;\n    removeOnUninstall?: boolean;\n  };\n}\n"})}),"\n",(0,l.jsx)(e.h4,{id:"2-extension-types",children:"2. Extension Types"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"GraphQL Extensions"})," (",(0,l.jsx)(e.code,{children:"IGraphQLExtension"}),")"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Uses Pothos builder-first approach"}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"builderDefinition"}),": Function name that defines the GraphQL field"]}),"\n",(0,l.jsx)(e.li,{children:"Supports queries, mutations, and subscriptions"}),"\n",(0,l.jsx)(e.li,{children:"Type-safe field definitions"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Database Extensions"})," (",(0,l.jsx)(e.code,{children:"IDatabaseExtension"}),")"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"type"}),': "table" | "enum" | "relation"']}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"name"}),": Database object name"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"file"}),": Path to definition file"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Hook Extensions"})," (",(0,l.jsx)(e.code,{children:"IHookExtension"}),")"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"type"}),': "pre" | "post"']}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"event"}),": Event name to hook into"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"handler"}),": Function name to execute"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Webhook Extensions"})," (",(0,l.jsx)(e.code,{children:"IWebhookExtension"}),")"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"path"}),": Webhook endpoint path"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"method"}),": HTTP method (GET, POST, PUT, DELETE, PATCH)"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"handler"}),": Function name for request handling"]}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"3-runtime-types",children:"3. Runtime Types"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"ILoadedPlugin"})})," - Plugin instance with loaded components:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"{\n  id: string;\n  manifest: IPluginManifest;\n  graphqlResolvers: Record<string, unknown>;\n  databaseTables: Record<string, Record<string, unknown>>;\n  hooks: Record<string, Function>;\n  webhooks: Record<string, Function>;\n  status: PluginStatus;\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"PluginStatus"})})," - Enum for plugin states:"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"ACTIVE"})," - Plugin is loaded and active"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"INACTIVE"})," - Plugin is loaded but not active"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"ERROR"})," - Plugin encountered an error"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"LOADING"})," - Plugin is currently loading"]}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"4-context-types",children:"4. Context Types"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"IPluginContext"})})," - Runtime context passed to plugins:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"{\n  db: IDatabaseClient;        // Drizzle database client\n  graphql: unknown;            // GraphQL schema/builder\n  pubsub: unknown;             // PubSub for subscriptions\n  logger: ILogger;             // Logger instance\n}\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"3-registryts---plugin-registry--initialization",children:["3. ",(0,l.jsx)(e.code,{children:"registry.ts"})," - Plugin Registry & Initialization"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Provides initialization utilities and global plugin manager access."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Functions"}),":"]}),"\n",(0,l.jsx)(e.h4,{id:"createplugincontextdependencies",children:(0,l.jsx)(e.code,{children:"createPluginContext(dependencies)"})}),"\n",(0,l.jsx)(e.p,{children:"Creates a plugin context object with all necessary dependencies:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const context = createPluginContext({\n  db: drizzleClient,\n  graphql: builder,\n  pubsub: pubsubInstance,\n  logger: logger\n});\n"})}),"\n",(0,l.jsx)(e.h4,{id:"initializepluginsystemcontext-pluginsdirectory",children:(0,l.jsx)(e.code,{children:"initializePluginSystem(context, pluginsDirectory?)"})}),"\n",(0,l.jsx)(e.p,{children:"Initializes the plugin system and returns the plugin manager:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const pluginManager = await initializePluginSystem(context);\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Features"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Singleton pattern - returns same instance on subsequent calls"}),"\n",(0,l.jsxs)(e.li,{children:["Waits for ",(0,l.jsx)(e.code,{children:"plugins:ready"})," event before resolving"]}),"\n",(0,l.jsx)(e.li,{children:"Error handling and logging"}),"\n",(0,l.jsx)(e.li,{children:"Async initialization"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"getpluginmanagerinstance",children:(0,l.jsx)(e.code,{children:"getPluginManagerInstance()"})}),"\n",(0,l.jsx)(e.p,{children:"Returns the current plugin manager instance:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const manager = getPluginManagerInstance();\n"})}),"\n",(0,l.jsx)(e.h4,{id:"ispluginsysteminitialized",children:(0,l.jsx)(e.code,{children:"isPluginSystemInitialized()"})}),"\n",(0,l.jsx)(e.p,{children:"Checks if plugin system is ready:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"if (isPluginSystemInitialized()) {\n  // System is ready\n}\n"})}),"\n",(0,l.jsx)(e.h4,{id:"destroypluginsystem",children:(0,l.jsx)(e.code,{children:"destroyPluginSystem()"})}),"\n",(0,l.jsx)(e.p,{children:"Gracefully shuts down plugin system (useful for testing):"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await destroyPluginSystem();\n"})}),"\n",(0,l.jsx)(e.h4,{id:"getpluginsystemstatus",children:(0,l.jsx)(e.code,{children:"getPluginSystemStatus()"})}),"\n",(0,l.jsx)(e.p,{children:"Returns health check and status information:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const status = getPluginSystemStatus();\n// { initialized: true, pluginCount: 5, ... }\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"4-utilsts---utility-functions",children:["4. ",(0,l.jsx)(e.code,{children:"utils.ts"})," - Utility Functions"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Common utility functions for plugin operations."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Functions"}),":"]}),"\n",(0,l.jsx)(e.h4,{id:"validation-functions",children:"Validation Functions"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"validatePluginManifest(manifest)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Validates manifest structure and required fields"}),"\n",(0,l.jsx)(e.li,{children:"Checks version format (semver)"}),"\n",(0,l.jsx)(e.li,{children:"Validates pluginId format (alphanumeric + underscores, no hyphens)"}),"\n",(0,l.jsx)(e.li,{children:"Returns type predicate for TypeScript"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"isValidPluginId(pluginId)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Validates plugin ID format"}),"\n",(0,l.jsx)(e.li,{children:"Must start with letter, can contain letters, numbers, underscores"}),"\n",(0,l.jsx)(e.li,{children:"No hyphens (important for GraphQL field naming)"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"loading-functions",children:"Loading Functions"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"loadPluginManifest(pluginPath)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Loads and parses manifest.json"}),"\n",(0,l.jsx)(e.li,{children:"Validates manifest structure"}),"\n",(0,l.jsx)(e.li,{children:"Throws descriptive errors"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"safeRequire(filePath)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Safely requires/imports a module"}),"\n",(0,l.jsx)(e.li,{children:"Handles both CommonJS and ES modules"}),"\n",(0,l.jsx)(e.li,{children:"Returns null on failure instead of throwing"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"file-system-functions",children:"File System Functions"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"directoryExists(path)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Checks if directory exists"}),"\n",(0,l.jsx)(e.li,{children:"Returns boolean"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"ensureDirectory(path)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Creates directory if it doesn't exist"}),"\n",(0,l.jsxs)(e.li,{children:["Recursive creation (like ",(0,l.jsx)(e.code,{children:"mkdir -p"}),")"]}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"plugin-specific-functions",children:"Plugin-Specific Functions"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"generatePluginId(name)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Creates valid plugin ID from name"}),"\n",(0,l.jsx)(e.li,{children:"Lowercase, alphanumeric + underscores"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"normalizeImportPath(path)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Normalizes import paths for cross-platform compatibility"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"database-functions",children:"Database Functions"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"createPluginTables(pluginId, tableDefinitions, db)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Creates database tables for a plugin"}),"\n",(0,l.jsx)(e.li,{children:"Uses Drizzle ORM schema definitions"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"dropPluginTables(pluginId, db)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Drops all tables associated with a plugin"}),"\n",(0,l.jsx)(e.li,{children:"Cleanup on uninstall"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"helper-functions",children:"Helper Functions"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"sortExtensionPoints(extensions)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Sorts extensions by priority/order"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"filterActiveExtensions(extensions)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Filters for active extensions only"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"debounce(fn, delay)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Debounces function calls"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"deepClone(obj)"})})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Deep clones objects safely"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"5-pluginwebhooksts---webhook-handler",children:["5. ",(0,l.jsx)(e.code,{children:"pluginWebhooks.ts"})," - Webhook Handler"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Fastify plugin that handles dynamic webhook routing for plugins."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"How It Works"}),":"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["Registers wildcard routes: ",(0,l.jsx)(e.code,{children:"/api/plugins/:pluginId/webhook/*"})]}),"\n",(0,l.jsx)(e.li,{children:"Looks up webhook handler in extension registry"}),"\n",(0,l.jsx)(e.li,{children:"Injects plugin context into request"}),"\n",(0,l.jsx)(e.li,{children:"Executes webhook handler"}),"\n",(0,l.jsx)(e.li,{children:"Returns response"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Route Patterns"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// Primary webhook endpoint\nPOST /api/plugins/my-plugin/webhook\n\n// Webhook with path\nPOST /api/plugins/my-plugin/webhook/callback\nGET  /api/plugins/my-plugin/webhook/status\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Features"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Dynamic handler lookup from extension registry"}),"\n",(0,l.jsx)(e.li,{children:"Plugin context injection"}),"\n",(0,l.jsx)(e.li,{children:"Error handling with proper HTTP status codes"}),"\n",(0,l.jsx)(e.li,{children:"Support for all HTTP methods (GET, POST, PUT, DELETE, PATCH)"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Integration"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// In Fastify app setup\nimport { pluginWebhooks } from './plugin/pluginWebhooks';\nawait fastify.register(pluginWebhooks);\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Usage in Plugin"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:'// Plugin manifest\n{\n  "extensionPoints": {\n    "webhooks": [\n      {\n        "path": "/callback",\n        "method": "POST",\n        "handler": "handleWebhook"\n      }\n    ]\n  }\n}\n\n// Plugin code\nexport async function handleWebhook(request, reply) {\n  const data = request.body;\n  // Process webhook\n  reply.send({ success: true });\n}\n'})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"manager-directory",children:"Manager Directory"}),"\n",(0,l.jsxs)(e.h3,{id:"1-managercorets---core-plugin-manager",children:["1. ",(0,l.jsx)(e.code,{children:"manager/core.ts"})," - Core Plugin Manager"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Main orchestrator for the entire plugin system. Extends EventEmitter for event-driven architecture."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Responsibilities"}),":"]}),"\n",(0,l.jsx)(e.h4,{id:"1-plugin-discovery--loading",children:"1. Plugin Discovery & Loading"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Discovers plugins from database (database is source of truth)"}),"\n",(0,l.jsx)(e.li,{children:"Loads plugin manifests and modules"}),"\n",(0,l.jsx)(e.li,{children:"Initializes plugin components"}),"\n",(0,l.jsx)(e.li,{children:"Registers extension points"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"2-plugin-state-management",children:"2. Plugin State Management"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Maintains ",(0,l.jsx)(e.code,{children:"loadedPlugins"})," Map with plugin instances"]}),"\n",(0,l.jsx)(e.li,{children:"Tracks plugin status (ACTIVE, INACTIVE, ERROR, LOADING)"}),"\n",(0,l.jsx)(e.li,{children:"Manages plugin errors and error recovery"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"3-extension-registry",children:"3. Extension Registry"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Maintains centralized registry of all extensions:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"GraphQL builder extensions"}),"\n",(0,l.jsx)(e.li,{children:"Database tables, enums, relations"}),"\n",(0,l.jsx)(e.li,{children:"Pre/post hooks"}),"\n",(0,l.jsx)(e.li,{children:"Webhook handlers"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"4-lifecycle-coordination",children:"4. Lifecycle Coordination"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Delegates to ",(0,l.jsx)(e.code,{children:"PluginLifecycle"})," for lifecycle operations"]}),"\n",(0,l.jsx)(e.li,{children:"Emits events throughout plugin lifecycle"}),"\n",(0,l.jsx)(e.li,{children:"Coordinates with database for persistence"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"5-component-coordination",children:"5. Component Coordination"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Initializes and manages:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"ExtensionLoader"})," - Loads extension points"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"PluginLifecycle"})," - Handles lifecycle operations"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"PluginRegistry"})," - Database operations"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Methods"}),":"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"loadPlugin(pluginId)"})})," - Load a plugin from filesystem:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const success = await pluginManager.loadPlugin('my-plugin');\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"activatePlugin(pluginId)"})})," - Activate a loaded plugin:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await pluginManager.activatePlugin('my-plugin');\n// Triggers schema rebuild\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"deactivatePlugin(pluginId)"})})," - Deactivate active plugin:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await pluginManager.deactivatePlugin('my-plugin');\n// Triggers schema rebuild\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"installPlugin(pluginId)"})})," - Install plugin (dependencies + database):"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await pluginManager.installPlugin('my-plugin');\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"uninstallPlugin(pluginId)"})})," - Uninstall and cleanup:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await pluginManager.uninstallPlugin('my-plugin');\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"getExtensionRegistry()"})})," - Get all registered extensions:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const registry = pluginManager.getExtensionRegistry();\nconst graphqlExtensions = registry.graphql.builderExtensions;\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"getLoadedPlugins()"})})," - Get all loaded plugins:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const plugins = pluginManager.getLoadedPlugins();\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"isSystemInitialized()"})})," - Check initialization status:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"if (pluginManager.isSystemInitialized()) {\n  // System ready\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"gracefulShutdown()"})})," - Shutdown without deactivating plugins:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await pluginManager.gracefulShutdown();\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Event System"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"pluginManager.on('plugins:initializing', () => {});\npluginManager.on('plugins:initialized', (pluginIds) => {});\npluginManager.on('plugin:loading', (pluginId) => {});\npluginManager.on('plugin:loaded', (pluginId) => {});\npluginManager.on('plugin:activating', (pluginId) => {});\npluginManager.on('plugin:activated', (pluginId) => {});\npluginManager.on('plugin:deactivating', (pluginId) => {});\npluginManager.on('plugin:deactivated', (pluginId) => {});\npluginManager.on('plugin:error', (pluginId, error) => {});\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"2-managerlifecyclets---lifecycle-manager",children:["2. ",(0,l.jsx)(e.code,{children:"manager/lifecycle.ts"})," - Lifecycle Manager"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Handles isolated plugin lifecycle processes with clear separation of concerns."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Lifecycle Operations"}),":"]}),"\n",(0,l.jsx)(e.h4,{id:"1-plugin-installation",children:"1. Plugin Installation"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await lifecycle.installPlugin(pluginId, pluginManager);\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Actions"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Install npm dependencies (from manifest.dependencies)"}),"\n",(0,l.jsx)(e.li,{children:"Create plugin-defined database tables"}),"\n",(0,l.jsxs)(e.li,{children:["Call ",(0,l.jsx)(e.code,{children:"onInstall"})," lifecycle hook"]}),"\n",(0,l.jsx)(e.li,{children:"Build Docker container (if enabled)"}),"\n",(0,l.jsxs)(e.li,{children:["Emit ",(0,l.jsx)(e.code,{children:"plugin:installed"})," event"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"No schema rebuild"})," - plugin must be activated to integrate with GraphQL"]}),"\n",(0,l.jsx)(e.h4,{id:"2-plugin-activation",children:"2. Plugin Activation"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await lifecycle.activatePlugin(pluginId, pluginManager);\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Actions"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Call ",(0,l.jsx)(e.code,{children:"onActivate"})," lifecycle hook"]}),"\n",(0,l.jsx)(e.li,{children:"Start Docker container (if configured)"}),"\n",(0,l.jsx)(e.li,{children:"Update plugin status to ACTIVE"}),"\n",(0,l.jsx)(e.li,{children:"Update database record"}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Trigger schema rebuild"})," to integrate extensions"]}),"\n",(0,l.jsxs)(e.li,{children:["Emit ",(0,l.jsx)(e.code,{children:"plugin:activated"})," event"]}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"3-plugin-deactivation",children:"3. Plugin Deactivation"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await lifecycle.deactivatePlugin(pluginId, pluginManager);\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Actions"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Call ",(0,l.jsx)(e.code,{children:"onDeactivate"})," lifecycle hook"]}),"\n",(0,l.jsx)(e.li,{children:"Stop Docker container (if configured)"}),"\n",(0,l.jsx)(e.li,{children:"Update plugin status to INACTIVE"}),"\n",(0,l.jsx)(e.li,{children:"Update database record"}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Trigger schema rebuild"})," to remove extensions"]}),"\n",(0,l.jsxs)(e.li,{children:["Emit ",(0,l.jsx)(e.code,{children:"plugin:deactivated"})," event"]}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"4-plugin-uninstallation",children:"4. Plugin Uninstallation"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await lifecycle.uninstallPlugin(pluginId, pluginManager);\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Actions"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Call ",(0,l.jsx)(e.code,{children:"onUninstall"})," lifecycle hook"]}),"\n",(0,l.jsx)(e.li,{children:"Remove Docker container (if enabled)"}),"\n",(0,l.jsx)(e.li,{children:"Drop plugin database tables"}),"\n",(0,l.jsx)(e.li,{children:"Remove from extension registry"}),"\n",(0,l.jsx)(e.li,{children:"Remove from loaded plugins"}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Trigger schema rebuild"})," for cleanup"]}),"\n",(0,l.jsxs)(e.li,{children:["Emit ",(0,l.jsx)(e.code,{children:"plugin:uninstalled"})," event"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Lifecycle Hooks"}),":"]}),"\n",(0,l.jsx)(e.p,{children:"Plugins can export lifecycle functions:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// Plugin code\nexport async function onInstall(context: IPluginContext) {\n  // Setup logic\n}\n\nexport async function onActivate(context: IPluginContext) {\n  // Activation logic\n}\n\nexport async function onDeactivate(context: IPluginContext) {\n  // Cleanup logic\n}\n\nexport async function onUninstall(context: IPluginContext) {\n  // Final cleanup\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Docker Management"}),":"]}),"\n",(0,l.jsx)(e.p,{children:"Automatically manages Docker containers based on manifest:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-json",children:'{\n  "docker": {\n    "enabled": true,\n    "composeFile": "docker-compose.yml",\n    "service": "my-service",\n    "buildOnInstall": true,\n    "upOnActivate": true,\n    "downOnDeactivate": true,\n    "removeOnUninstall": true,\n    "env": {\n      "PLUGIN_VAR": "value"\n    }\n  }\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Methods"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"createPluginDatabases(pluginId, manifest)"})," - Create tables"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"removePluginDatabases(pluginId)"})," - Drop tables"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"manageDocker(pluginId, manifest, operation)"})," - Docker lifecycle"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"triggerSchemaRebuild()"})," - Rebuild GraphQL schema"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"callOnInstallHook(pluginId)"})," - Call install hook"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"callOnActivateHook(pluginId)"})," - Call activate hook"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"3-managerextensionsts---extension-loader",children:["3. ",(0,l.jsx)(e.code,{children:"manager/extensions.ts"})," - Extension Loader"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Loads and registers GraphQL, Database, Hook, and Webhook extensions from plugins."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Extension Loading Process"}),":"]}),"\n",(0,l.jsx)(e.h4,{id:"1-graphql-extensions-builder-first-approach",children:"1. GraphQL Extensions (Builder-First Approach)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await extensionLoader.loadExtensionPoints(pluginId, manifest, pluginModule);\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Pothos Builder Integration"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:'// Plugin manifest\n{\n  "extensionPoints": {\n    "graphql": [\n      {\n        "type": "query",\n        "name": "myPluginQuery",\n        "builderDefinition": "defineMyQuery",\n        "file": "graphql/queries.ts"\n      }\n    ]\n  }\n}\n\n// Plugin code (graphql/queries.ts)\nexport function defineMyQuery(builder: PothosSchemaBuilder) {\n  builder.queryField(\'myPluginQuery\', (t) =>\n    t.field({\n      type: \'String\',\n      resolve: () => \'Hello from plugin!\'\n    })\n  );\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Features"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Type-safe field definitions with Pothos"}),"\n",(0,l.jsx)(e.li,{children:"Automatic prefixing with plugin ID"}),"\n",(0,l.jsx)(e.li,{children:"Support for queries, mutations, subscriptions"}),"\n",(0,l.jsx)(e.li,{children:"Error handling and validation"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"2-database-extensions",children:"2. Database Extensions"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:'// Plugin manifest\n{\n  "extensionPoints": {\n    "database": [\n      {\n        "type": "table",\n        "name": "plugin_data",\n        "file": "database/tables.ts"\n      }\n    ]\n  }\n}\n\n// Plugin code (database/tables.ts)\nimport { pgTable, text, timestamp } from \'drizzle-orm/pg-core\';\n\nexport const pluginDataTable = pgTable(\'plugin_data\', {\n  id: text(\'id\').primaryKey(),\n  content: text(\'content\'),\n  createdAt: timestamp(\'created_at\').defaultNow()\n});\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Features"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Drizzle ORM schema definitions"}),"\n",(0,l.jsx)(e.li,{children:"Automatic table creation/deletion"}),"\n",(0,l.jsx)(e.li,{children:"Support for tables, enums, relations"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"3-hook-extensions",children:"3. Hook Extensions"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:'// Plugin manifest\n{\n  "extensionPoints": {\n    "hooks": [\n      {\n        "type": "pre",\n        "event": "user:create",\n        "handler": "beforeUserCreate",\n        "file": "hooks/user.ts"\n      }\n    ]\n  }\n}\n\n// Plugin code (hooks/user.ts)\nexport async function beforeUserCreate(data: any) {\n  // Pre-processing logic\n  return modifiedData;\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Features"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Pre/post event hooks"}),"\n",(0,l.jsx)(e.li,{children:"Async support"}),"\n",(0,l.jsx)(e.li,{children:"Event-driven architecture"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"4-webhook-extensions",children:"4. Webhook Extensions"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:'// Plugin manifest\n{\n  "extensionPoints": {\n    "webhooks": [\n      {\n        "path": "/callback",\n        "method": "POST",\n        "handler": "handleCallback",\n        "description": "Webhook callback handler"\n      }\n    ]\n  }\n}\n\n// Plugin code\nexport async function handleCallback(request, reply) {\n  const data = request.body;\n  // Process webhook\n  reply.send({ success: true });\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Methods"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"loadExtensionPoints(pluginId, manifest, module)"})," - Load all extensions"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"loadBuilderGraphQLExtension(pluginId, extension, module)"})," - Load GraphQL"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"loadDatabaseExtension(pluginId, extension, module)"})," - Load database"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"loadHookExtension(pluginId, extension, module)"})," - Load hooks"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"loadWebhookExtension(pluginId, extension, module)"})," - Load webhooks"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"4-managerregistryts---registry-manager",children:["4. ",(0,l.jsx)(e.code,{children:"manager/registry.ts"})," - Registry Manager"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Handles database operations for plugin state management."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Responsibilities"}),":"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Database Queries"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Fetch plugin records from database"}),"\n",(0,l.jsx)(e.li,{children:"Query by plugin ID"}),"\n",(0,l.jsx)(e.li,{children:"List all installed plugins"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Database Updates"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Update plugin status (activated/deactivated)"}),"\n",(0,l.jsx)(e.li,{children:"Update plugin metadata"}),"\n",(0,l.jsx)(e.li,{children:"Track installation state"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Methods"}),":"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"getPluginFromDatabase(pluginId)"})})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"const plugin = await registry.getPluginFromDatabase('my-plugin');\n// { id, pluginId, isActivated, isInstalled, ... }\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"updatePluginInDatabase(pluginId, updates)"})})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"await registry.updatePluginInDatabase('my-plugin', {\n  isActivated: true,\n  updatedAt: new Date()\n});\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Database Schema"})," (from ",(0,l.jsx)(e.code,{children:"pluginsTable"}),"):"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"{\n  id: string;              // UUID\n  pluginId: string;        // Plugin identifier\n  isActivated: boolean;    // Activation status\n  isInstalled: boolean;    // Installation status\n  backup: boolean;         // Backup flag\n  createdAt: Date;        // Creation timestamp\n  updatedAt: Date;        // Last update timestamp\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Integration"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Uses Drizzle ORM for type-safe queries"}),"\n",(0,l.jsx)(e.li,{children:"Accesses database through plugin context"}),"\n",(0,l.jsx)(e.li,{children:"Error handling and logging"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.h3,{id:"5-managerindexts---manager-exports",children:["5. ",(0,l.jsx)(e.code,{children:"manager/index.ts"})," - Manager Exports"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Purpose"}),": Central export point for all manager components."]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Exports"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"export { default as PluginManager } from './core';\nexport { default } from './core';\nexport { ExtensionLoader } from './extensions';\nexport { PluginLifecycle } from './lifecycle';\nexport { PluginRegistry } from './registry';\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Usage"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// Import main manager\nimport PluginManager from '@/plugin/manager';\n\n// Import individual components (advanced usage)\nimport { ExtensionLoader, PluginLifecycle } from '@/plugin/manager';\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"extension-point-system",children:"Extension Point System"}),"\n",(0,l.jsx)(e.h3,{id:"graphql-extensions-builder-first",children:"GraphQL Extensions (Builder-First)"}),"\n",(0,l.jsxs)(e.p,{children:["The system uses ",(0,l.jsx)(e.strong,{children:"Pothos GraphQL"})," builder for type-safe schema extensions:"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Why Builder-First?"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Type safety with TypeScript"}),"\n",(0,l.jsx)(e.li,{children:"No code generation needed"}),"\n",(0,l.jsx)(e.li,{children:"Better IDE support"}),"\n",(0,l.jsx)(e.li,{children:"Easier to test"}),"\n",(0,l.jsx)(e.li,{children:"Composable field definitions"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:'// Manifest\n{\n  "extensionPoints": {\n    "graphql": [\n      {\n        "type": "query",\n        "name": "getPluginData",\n        "builderDefinition": "defineGetPluginDataQuery"\n      }\n    ]\n  }\n}\n\n// Plugin code\nexport function defineGetPluginDataQuery(builder: PothosSchemaBuilder) {\n  builder.queryField(\'myPlugin_getPluginData\', (t) =>\n    t.field({\n      type: \'String\',\n      args: {\n        id: t.arg.string({ required: true })\n      },\n      resolve: async (parent, args, context) => {\n        // Resolver logic\n        return data;\n      }\n    })\n  );\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Automatic Prefixing"}),": Query/mutation names are automatically prefixed with plugin ID to avoid conflicts."]}),"\n",(0,l.jsx)(e.h3,{id:"database-extensions",children:"Database Extensions"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Drizzle ORM Integration"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// Define table\nimport { pgTable, text, timestamp } from 'drizzle-orm/pg-core';\n\nexport const myPluginTable = pgTable('my_plugin_data', {\n  id: text('id').primaryKey(),\n  content: text('content').notNull(),\n  createdAt: timestamp('created_at').defaultNow()\n});\n\n// Use in plugin\nexport async function saveData(context: IPluginContext, data: any) {\n  const db = context.db as IDatabaseClient;\n  await db.insert(myPluginTable).values(data);\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Features"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Automatic table creation on install"}),"\n",(0,l.jsx)(e.li,{children:"Automatic table deletion on uninstall"}),"\n",(0,l.jsx)(e.li,{children:"Type-safe queries"}),"\n",(0,l.jsx)(e.li,{children:"Migration support"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"hook-extensions",children:"Hook Extensions"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Event-Driven Hooks"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// Pre-hook (can modify data)\nexport async function beforeUserCreate(data: any, context: IPluginContext) {\n  // Validation or modification\n  data.customField = await fetchSomeData();\n  return data;\n}\n\n// Post-hook (side effects only)\nexport async function afterUserCreate(user: any, context: IPluginContext) {\n  // Notifications, logging, etc.\n  await sendWelcomeEmail(user.email);\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Common Events"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"user:create"}),", ",(0,l.jsx)(e.code,{children:"user:update"}),", ",(0,l.jsx)(e.code,{children:"user:delete"})]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"post:create"}),", ",(0,l.jsx)(e.code,{children:"post:update"}),", ",(0,l.jsx)(e.code,{children:"post:delete"})]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"event:create"}),", ",(0,l.jsx)(e.code,{children:"event:update"}),", ",(0,l.jsx)(e.code,{children:"event:delete"})]}),"\n",(0,l.jsx)(e.li,{children:"Custom plugin events"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"webhook-extensions",children:"Webhook Extensions"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"RESTful Webhook Endpoints"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"export async function handleWebhook(\n  request: FastifyRequest,\n  reply: FastifyReply\n) {\n  const data = request.body;\n  const context = (request as any).pluginContext;\n  \n  // Process webhook\n  const result = await processData(data, context);\n  \n  reply.send({ success: true, result });\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Webhook URL Pattern"}),": ",(0,l.jsx)(e.code,{children:"/api/plugins/{pluginId}/webhook/{path}"})]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"plugin-development-workflow",children:"Plugin Development Workflow"}),"\n",(0,l.jsx)(e.h3,{id:"1-plugin-structure",children:"1. Plugin Structure"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"my-plugin/\n\u251c\u2500\u2500 manifest.json           # Plugin metadata and extensions\n\u251c\u2500\u2500 index.ts               # Main entry point\n\u251c\u2500\u2500 graphql/\n\u2502   \u251c\u2500\u2500 queries.ts        # GraphQL query definitions\n\u2502   \u2514\u2500\u2500 mutations.ts      # GraphQL mutation definitions\n\u251c\u2500\u2500 database/\n\u2502   \u2514\u2500\u2500 tables.ts         # Database schema definitions\n\u251c\u2500\u2500 hooks/\n\u2502   \u2514\u2500\u2500 user.ts           # Event hooks\n\u251c\u2500\u2500 webhooks/\n\u2502   \u2514\u2500\u2500 handler.ts        # Webhook handlers\n\u251c\u2500\u2500 docker-compose.yml    # Optional Docker services\n\u2514\u2500\u2500 package.json          # Plugin dependencies\n"})}),"\n",(0,l.jsx)(e.h3,{id:"2-manifest-example",children:"2. Manifest Example"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-json",children:'{\n  "name": "My Awesome Plugin",\n  "pluginId": "myAwesomePlugin",\n  "version": "1.0.0",\n  "description": "Adds cool features to Talawa API",\n  "author": "Your Name",\n  "main": "index.ts",\n  "dependencies": {\n    "axios": "^1.0.0",\n    "lodash": "^4.17.21"\n  },\n  "extensionPoints": {\n    "graphql": [\n      {\n        "type": "query",\n        "name": "getAwesomeData",\n        "builderDefinition": "defineGetAwesomeData",\n        "file": "graphql/queries.ts"\n      }\n    ],\n    "database": [\n      {\n        "type": "table",\n        "name": "awesome_data",\n        "file": "database/tables.ts"\n      }\n    ],\n    "hooks": [\n      {\n        "type": "post",\n        "event": "user:create",\n        "handler": "afterUserCreate",\n        "file": "hooks/user.ts"\n      }\n    ],\n    "webhooks": [\n      {\n        "path": "/callback",\n        "method": "POST",\n        "handler": "handleCallback"\n      }\n    ]\n  },\n  "docker": {\n    "enabled": true,\n    "composeFile": "docker-compose.yml",\n    "service": "my-service",\n    "buildOnInstall": true,\n    "upOnActivate": true,\n    "downOnDeactivate": true\n  }\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"3-plugin-code-example",children:"3. Plugin Code Example"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// index.ts\nimport type { IPluginContext } from '@/plugin/types';\n\nexport { defineGetAwesomeData } from './graphql/queries';\nexport { awesomeDataTable } from './database/tables';\nexport { afterUserCreate } from './hooks/user';\nexport { handleCallback } from './webhooks/handler';\n\n// Lifecycle hooks\nexport async function onInstall(context: IPluginContext) {\n  context.logger.info('Plugin installed!');\n}\n\nexport async function onActivate(context: IPluginContext) {\n  context.logger.info('Plugin activated!');\n}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"4-installation--usage",children:"4. Installation & Usage"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// Initialize plugin system\nimport { initializePluginSystem, createPluginContext } from '@/plugin';\n\nconst context = createPluginContext({\n  db: drizzleClient,\n  graphql: builder,\n  pubsub: pubsubInstance,\n  logger: logger\n});\n\nconst pluginManager = await initializePluginSystem(context);\n\n// Install plugin\nawait pluginManager.installPlugin('myAwesomePlugin');\n\n// Activate plugin\nawait pluginManager.activatePlugin('myAwesomePlugin');\n\n// Plugin extensions are now active and integrated!\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsx)(e.h3,{id:"for-plugin-developers",children:"For Plugin Developers"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Use Builder-First GraphQL"})," - Always use Pothos builder definitions"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Validate Plugin IDs"})," - No hyphens, alphanumeric + underscores only"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Handle Errors Gracefully"})," - Implement proper error handling"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Document Extensions"})," - Add descriptions to all extensions"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Test Lifecycle Hooks"})," - Ensure install/uninstall work correctly"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Version Properly"})," - Use semantic versioning"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Declare Dependencies"})," - List all npm packages in manifest"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"for-system-integrators",children:"For System Integrators"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Initialize Early"})," - Initialize plugin system during app startup"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Wait for Ready"})," - Wait for ",(0,l.jsx)(e.code,{children:"plugins:ready"})," event"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Handle Events"})," - Subscribe to lifecycle events for monitoring"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Use Singleton"})," - Access via ",(0,l.jsx)(e.code,{children:"getPluginManagerInstance()"})]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Graceful Shutdown"})," - Call ",(0,l.jsx)(e.code,{children:"gracefulShutdown()"})," on app close"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"for-administrators",children:"For Administrators"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Database First"})," - Plugin state is in database, filesystem is secondary"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Test in Development"})," - Validate plugins before production"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Monitor Docker"})," - Check container health if using Docker features"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Backup Database"})," - Backup before installing/uninstalling plugins"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Check Dependencies"})," - Review npm packages for security"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"event-system",children:"Event System"}),"\n",(0,l.jsx)(e.p,{children:"The plugin manager extends EventEmitter for comprehensive event-driven architecture:"}),"\n",(0,l.jsx)(e.h3,{id:"lifecycle-events",children:"Lifecycle Events"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"pluginManager.on('plugins:initializing', () => {\n  console.log('Plugin system starting...');\n});\n\npluginManager.on('plugins:initialized', (pluginIds: string[]) => {\n  console.log('Loaded plugins:', pluginIds);\n});\n\npluginManager.on('plugin:loading', (pluginId: string) => {\n  console.log(`Loading ${pluginId}...`);\n});\n\npluginManager.on('plugin:loaded', (pluginId: string) => {\n  console.log(`${pluginId} loaded successfully`);\n});\n\npluginManager.on('plugin:activating', (pluginId: string) => {\n  console.log(`Activating ${pluginId}...`);\n});\n\npluginManager.on('plugin:activated', (pluginId: string) => {\n  console.log(`${pluginId} is now active`);\n});\n\npluginManager.on('plugin:error', (pluginId: string, error: Error) => {\n  console.error(`Plugin ${pluginId} error:`, error);\n});\n"})}),"\n",(0,l.jsx)(e.h3,{id:"custom-plugin-events",children:"Custom Plugin Events"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"// Plugin can emit custom events\nexport function defineCustomMutation(builder: PothosSchemaBuilder) {\n  builder.mutationField('doSomething', (t) =>\n    t.field({\n      type: 'Boolean',\n      resolve: async (parent, args, context) => {\n        // Emit custom event\n        context.pluginManager.emit('myPlugin:customEvent', { data: args });\n        return true;\n      }\n    })\n  );\n}\n\n// Other plugins or app can listen\npluginManager.on('myPlugin:customEvent', (data) => {\n  console.log('Custom event received:', data);\n});\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"testing",children:"Testing"}),"\n",(0,l.jsx)(e.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"import { validatePluginManifest, generatePluginId } from '@/plugin/utils';\n\ndescribe('Plugin Utils', () => {\n  test('validates manifest', () => {\n    const manifest = {\n      name: 'Test Plugin',\n      pluginId: 'testPlugin',\n      version: '1.0.0',\n      description: 'Test',\n      author: 'Tester',\n      main: 'index.ts'\n    };\n    expect(validatePluginManifest(manifest)).toBe(true);\n  });\n  \n  test('generates plugin ID', () => {\n    expect(generatePluginId('My Plugin!')).toBe('my_plugin');\n  });\n});\n"})}),"\n",(0,l.jsx)(e.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-typescript",children:"describe('Plugin Manager', () => {\n  let pluginManager: PluginManager;\n  \n  beforeAll(async () => {\n    const context = createPluginContext({ /* ... */ });\n    pluginManager = await initializePluginSystem(context);\n  });\n  \n  test('loads plugin', async () => {\n    const success = await pluginManager.loadPlugin('testPlugin');\n    expect(success).toBe(true);\n  });\n  \n  test('activates plugin', async () => {\n    await pluginManager.activatePlugin('testPlugin');\n    const plugin = pluginManager.getLoadedPlugin('testPlugin');\n    expect(plugin?.status).toBe(PluginStatus.ACTIVE);\n  });\n  \n  afterAll(async () => {\n    await destroyPluginSystem();\n  });\n});\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(e.h3,{id:"plugin-not-loading",children:"Plugin Not Loading"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Symptoms"}),": Plugin doesn't appear in loaded plugins list"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["Check plugin exists in database: ",(0,l.jsx)(e.code,{children:"SELECT * FROM plugins WHERE plugin_id = 'myPlugin'"})]}),"\n",(0,l.jsxs)(e.li,{children:["Verify plugin directory exists: ",(0,l.jsx)(e.code,{children:"src/plugin/available/myPlugin/"})]}),"\n",(0,l.jsxs)(e.li,{children:["Validate manifest: ",(0,l.jsx)(e.code,{children:"validatePluginManifest(manifest)"})]}),"\n",(0,l.jsx)(e.li,{children:"Check console for error messages"}),"\n",(0,l.jsxs)(e.li,{children:["Verify ",(0,l.jsx)(e.code,{children:"isInstalled"})," is true in database"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"graphql-extension-not-working",children:"GraphQL Extension Not Working"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Symptoms"}),": Query/mutation not available in schema"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Ensure plugin is activated (not just loaded)"}),"\n",(0,l.jsx)(e.li,{children:"Check builder function is exported correctly"}),"\n",(0,l.jsxs)(e.li,{children:["Verify ",(0,l.jsx)(e.code,{children:"builderDefinition"})," name matches exported function"]}),"\n",(0,l.jsx)(e.li,{children:"Look for schema rebuild logs"}),"\n",(0,l.jsx)(e.li,{children:"Test builder function manually"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"database-tables-not-created",children:"Database Tables Not Created"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Symptoms"}),": Tables don't exist after installation"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Check database extension is defined in manifest"}),"\n",(0,l.jsx)(e.li,{children:"Verify table definition is exported correctly"}),"\n",(0,l.jsxs)(e.li,{children:["Check for errors in ",(0,l.jsx)(e.code,{children:"onInstall"})," lifecycle"]}),"\n",(0,l.jsx)(e.li,{children:"Manually verify database schema"}),"\n",(0,l.jsx)(e.li,{children:"Check Drizzle ORM configuration"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"webhook-not-responding",children:"Webhook Not Responding"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Symptoms"}),": Webhook endpoint returns 404"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["Verify webhook is registered: ",(0,l.jsx)(e.code,{children:"pluginManager.getExtensionRegistry().webhooks"})]}),"\n",(0,l.jsxs)(e.li,{children:["Check webhook path format (should start with ",(0,l.jsx)(e.code,{children:"/"}),")"]}),"\n",(0,l.jsx)(e.li,{children:"Ensure plugin is activated"}),"\n",(0,l.jsx)(e.li,{children:"Verify Fastify plugin is registered"}),"\n",(0,l.jsx)(e.li,{children:"Check handler function signature"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"docker-container-issues",children:"Docker Container Issues"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Symptoms"}),": Container not starting or stopping"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Verify Docker is running"}),"\n",(0,l.jsxs)(e.li,{children:["Check ",(0,l.jsx)(e.code,{children:"docker-compose.yml"})," exists"]}),"\n",(0,l.jsx)(e.li,{children:"Validate service name in manifest"}),"\n",(0,l.jsxs)(e.li,{children:["Check Docker logs: ",(0,l.jsx)(e.code,{children:"docker-compose logs"})]}),"\n",(0,l.jsxs)(e.li,{children:["Manually test: ",(0,l.jsx)(e.code,{children:"docker-compose up"})]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Plugin Marketplace"}),": Central repository for discovering plugins"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Version Management"}),": Support multiple plugin versions"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Plugin Dependencies"}),": Declare dependencies on other plugins"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"GraphQL Federation"}),": Federated schema support"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Performance Monitoring"}),": Track plugin performance impact"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Sandboxing"}),": Isolate plugin execution contexts"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Hot Reloading"}),": Update plugins without restart"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Permission System"}),": Fine-grained plugin permissions"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"contributing",children:"Contributing"}),"\n",(0,l.jsx)(e.p,{children:"When extending the plugin system:"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Follow existing architectural patterns"}),"\n",(0,l.jsx)(e.li,{children:"Add comprehensive tests for new features"}),"\n",(0,l.jsx)(e.li,{children:"Update type definitions"}),"\n",(0,l.jsx)(e.li,{children:"Document new functionality"}),"\n",(0,l.jsx)(e.li,{children:"Maintain backward compatibility"}),"\n",(0,l.jsx)(e.li,{children:"Consider performance implications"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"license",children:"License"}),"\n",(0,l.jsx)(e.p,{children:"See main project LICENSE file."})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(d,{...n})}):d(n)}},55288:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>a});var s=i(30758);const l={},t=s.createContext(l);function r(n){const e=s.useContext(t);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:r(n.components),s.createElement(t.Provider,{value:e},n.children)}}}]);