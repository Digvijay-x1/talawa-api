"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[98082],{2240:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases/ParsedDefaultGraphQLConnectionArguments","title":"ParsedDefaultGraphQLConnectionArguments","description":"Admin Docs","source":"@site/docs/docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases/ParsedDefaultGraphQLConnectionArguments.md","sourceDirName":"docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases","slug":"/docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases/ParsedDefaultGraphQLConnectionArguments","permalink":"/docs/docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases/ParsedDefaultGraphQLConnectionArguments","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-api/edit/develop/docs/docs/docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases/ParsedDefaultGraphQLConnectionArguments.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"DefaultGraphQLConnectionPageInfo","permalink":"/docs/docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases/DefaultGraphQLConnectionPageInfo"},"next":{"title":"ParsedDefaultGraphQLConnectionArgumentsWithWhere","permalink":"/docs/docs/auto-schema/utilities/defaultGraphQLConnection/type-aliases/ParsedDefaultGraphQLConnectionArgumentsWithWhere"}}');var r=t(86070),i=t(55288);const o={},a=void 0,c={},l=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Type declaration",id:"type-declaration",level:2},{value:"cursor?",id:"cursor",level:3},{value:"isInversed",id:"isinversed",level:3},{value:"Example",id:"example",level:4},{value:"limit",id:"limit",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/",children:"Admin Docs"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"type-alias-parseddefaultgraphqlconnectionargumentscursor",children:"Type Alias: ParsedDefaultGraphQLConnectionArguments<Cursor>"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ParsedDefaultGraphQLConnectionArguments"}),"<",(0,r.jsx)(n.code,{children:"Cursor"}),">: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Defined in: src/utilities/defaultGraphQLConnection.ts:6"}),"\n",(0,r.jsx)(n.p,{children:"Type of the object containing the parsed default arguments of a graphql connection."}),"\n",(0,r.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,r.jsxs)(n.p,{children:["\u2022 ",(0,r.jsx)(n.strong,{children:"Cursor"})," = ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,r.jsx)(n.h3,{id:"cursor",children:"cursor?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"cursor"}),": ",(0,r.jsx)(n.code,{children:"Cursor"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The cursor representing the position in the connection."}),"\n",(0,r.jsx)(n.h3,{id:"isinversed",children:"isInversed"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isInversed"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This field is used to identify whether the client wants to traverse the graphql connection edges in the default order or in the inversed order."}),"\n",(0,r.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"An example would be scrolling on twitter's home page(assuming they're using graphql connections for fetching array-like data). When scrolling down, the graphql connection traversal is the default and when scrolling up, the graphql connection traversal is inversed.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"limit",children:"limit"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"limit"}),": ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The amount of graphql connection edges to return in a single graphql connection operation."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},55288:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(30758);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);